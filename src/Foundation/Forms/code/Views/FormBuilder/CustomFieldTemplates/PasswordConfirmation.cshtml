@using Sitecore.ExperienceForms.Mvc.Html
@using Sitecore.Globalization
@model Sitecore.ExperienceForms.Mvc.Models.Fields.PasswordConfirmationViewModel


<label class="sc-form-item @if(Model.Required){<text>js-sc-form-required</text>}else{<text>sc-form-item--optional</text>}">
    <span class="@Model.LabelCssClass">@Html.DisplayTextFor(t => Model.Title)</span>
    <input id="@Html.IdFor(m => Model.Value)" name="@Html.NameFor(m => Model.Value)" class="@Model.CssClass" type="password" value="@Model.Value" 
        @if (Model.MaxLength > 0) { <text> maxlength="@Model.MaxLength" </text> } placeholder="@Model.PlaceholderText" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.Value)/>
    <span role="alert" class="sc-form-item__error-msg">@Html.ValidationMessageFor(m => Model.Value)</span>
</label>
<label class="sc-form-item @if(Model.Required){<text>js-sc-form-required</text>}else{<text>sc-form-item--optional</text>}">
    <span class="@Model.LabelCssClass">@Model.ConfirmPasswordLabel</span>
    <input id="@Html.IdFor(m => Model.ConfirmPassword)" name="@Html.NameFor(m => Model.ConfirmPassword)" class="@Model.CssClass" type="password" 
        @if (Model.MaxLength > 0) { <text> maxlength="@Model.MaxLength" </text> } placeholder="@Model.ConfirmPasswordPlaceholder" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.ConfirmPassword)/>
    <span role="alert" class="sc-form-item__error-msg">@Html.ValidationMessageFor(m => Model.ConfirmPassword)</span>
</label>