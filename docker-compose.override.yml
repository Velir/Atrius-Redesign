version: "2.4"

services:

  node:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-node:${VERSION:-latest}
    build:
      context: .
      dockerfile: ${LOCAL_BUILD_PATH}/node/Dockerfile
      args:
        BASE_IMAGE: ${SOLUTION_BASE_IMAGE}
        NODE_INSTALLER_IMAGE: mcr.microsoft.com/windows/servercore:1803
        NODE_VERSION: v10.19.0
    working_dir: C:\html
    mem_limit: 2GB
    volumes:
      - .\:C:\html
    scale: 0

  # storybook:
  #   image: wodby/node:14
  #   container_name: ${COMPOSE_PROJECT_NAME}_storybook
  #   working_dir: /var/www/html
  #   volumes:
  #     - ./:/var/www/html
  #   mem_limit: 3GB
  #   ports:
  #     - "3030:3030"
  #   command: bash -c "npm install && node_modules/.bin/gulp Atrius"

  jmeter:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-jmeter:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}/jmeter
      args:
        BASE_IMAGE: openjdk:8-windowsservercore
        JMETER_VERSION: 5.4.1
    volumes:
      - c:\:c:\tests
    dns:
      - 172.20.10.31
      - 172.20.10.32
    scale: 0

  traefik:
    volumes:
      - ./tools/docker/traefik:C:/etc/traefik
    depends_on:
      hrz:
        condition: service_healthy  
  
  mssql:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-mssql:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}\mssql
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-mssql:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        HORIZON_RESOURCES_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp0-assets:${HORIZON_ASSET_VERSION}
    mem_limit: 2GB
    volumes:
      - ${LOCAL_DATA_PATH}\mssql:c:\data
  
  # Mount our Solr data folder
  solr:
    command: powershell.exe -NoLogo -NoProfile -Command "& c:\\tools\\entrypoints\\solr-log4j.ps1; .\\Start.ps1 -InstallPath c:\\solr\\server\\solr -DataPath c:\\data -SolrPort 8983 -Verbose"
    volumes:
      - ${LOCAL_BUILD_PATH}\solr\entrypoints:c:\tools\entrypoints
      - ${LOCAL_DATA_PATH}\solr:c:\data
  
  # Some modules (like SXA) also require additions to the Solr image.
  solr-init:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-solr-init:${VERSION:-latest}  
    build:
      context: ${LOCAL_BUILD_PATH}\solr-init
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-solr-init:${SITECORE_VERSION}

  id:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-id:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}\id
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-id:${SITECORE_VERSION}
    environment: 
      Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup2: https://${HRZ_HOST}

  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xp0-cm:${VERSION:-latest}
    build:
      context: ${LOCAL_BUILD_PATH}\cm
      args:
        BASE_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xp0-cm:${SITECORE_VERSION}
        SPE_IMAGE: ${SITECORE_MODULE_REGISTRY}spe-assets:${SPE_VERSION}
        TOOLING_IMAGE: ${SITECORE_TOOLS_REGISTRY}sitecore-docker-tools-assets:${TOOLS_VERSION}
        HORIZON_RESOURCES_IMAGE: ${SITECORE_MODULE_REGISTRY}horizon-integration-xp0-assets:${HORIZON_ASSET_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\website:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${LOCAL_ITEM_PATH}:c:\Unicorn
    environment:
      SITECORE_DEVELOPMENT_PATCHES: CustomErrorsOff
      Sitecore_Horizon_ClientHost: https://${HRZ_HOST}
    entrypoint: powershell -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1"

  # xconnect:
    # AtriusHealth - removed customizations

  # xdbsearchworker:
    # AtriusHealth - removed customizations

  # xdbautomationworker:
    # AtriusHealth - removed customizations

  # cortexprocessingworker:
    # AtriusHealth - removed customizations

  hrz:
    image: ${SITECORE_MODULE_REGISTRY}sitecore-horizon:${HORIZON_VERSION}
    isolation: ${ISOLATION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz/live"]
      timeout: 300s
    environment:
      Sitecore_License: ${SITECORE_LICENSE}
      Sitecore_FederatedUI__HostBaseUrl: http://hrz
      Sitecore_SitecorePlatform__ContentManagementUrl: https://${CM_HOST}
      Sitecore_SitecorePlatform__ContentManagementInternalUrl: http://cm
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__RequireHttpsMetadata: 'false'
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__CallbackAuthority: https://${HRZ_HOST}
      Sitecore_Sitecore__Authentication__OpenIdConnectOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__Authority: https://${ID_HOST}
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__InternalAuthority: http://id
      Sitecore_Sitecore__Authentication__BearerAuthenticationOptions__RequireHttpsMetadata: 'false'
      Sitecore_Plugins__Filters__ExperienceAccelerator: +SXA
    depends_on:
      id:
        condition: service_started
      cm:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.sh-secure.entrypoints=websecure"
      - "traefik.http.routers.sh-secure.rule=Host(`${HRZ_HOST}`)"
      - "traefik.http.routers.sh-secure.tls=true"
      - "traefik.http.routers.sh-secure.middlewares=force-STS-Header"
      - "traefik.http.services.sh.loadbalancer.server.port=80"
